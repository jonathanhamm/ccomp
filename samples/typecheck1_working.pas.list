     1: program bob (input, output);
     2: var a : integer; var c : real; var d : array[2332..3232] of real;
     3: var torquemada : array[32..2332] of integer; var putin : array[14..1000] of real;
     4: var kimjongun : array[13..1000] of real;
     5: var kimjongil : array[14..1000] of real;
     6: var bosstweed : array[1..1000] of real;
     7: procedure lolwut (a : integer; b : real; c : real; kimjongil : array[14..1000] of real;
     8: bosstweed : array[1..1000] of real);
     9:     begin
    10:         if a <> b then
    11:             a := a * a
    12:         ;
    13:         kimjongil[a*a+a] := 333*34;
    14:         b := c*b*a*c/3;
    15:         kimjongil := putin;
    16:         c := kimjongil[a*a]
    17:     end;
    18: begin
    19:     a := 3;
    20:     if (a*32 mod 4) <> c then
    21:         call lolwut(1, 1.1, 3.3, kimjongil, bosstweed)
    22:     else
    23:         begin
    24:             while a < c do
    25:                 begin
    26:                     a := a*32*a;
    27:                     c := a*23*23/4*32/23
    28:                 end
    29: end;
    30:         if not (d[3] = putin[11+32+3]) and (torquemada[323] <> 432) or (a+c/c+32 <= putin[32]) then
    31:             begin
    32:                 d[2] := 32
    33:             end
    34:         else
    35:             begin
    36:                 putin[88*88*a] := 23.132+32/32+342+(3 mod 44);
    37:                 while (a * d[2222]+3 <> 32) and (torquemada[2332+32+(8 mod 4)] <> putin[2323])
    38:                     or (putin[32] >= 2332) or (torquemada[3223+3] < 2323) do
    39:                     begin
    40:                         putin[3232] := 2332+a
    41:                     end;
    42:                     call lolwut(1, 1.1, 3.3, kimjongil, bosstweed)
    43:             end
    44: end.
    45: 
